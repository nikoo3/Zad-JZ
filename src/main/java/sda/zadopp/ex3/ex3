Zadanie 3

Klasa Shape:
Zaimplementuj klasę Shape . Klasa powinna zawierać:
pole odpowiedzialne za przechowywanie koloru
pole odpowiedzialne za przechowywanie informacji o tym czy kolor
powinien wypełniać gurę czy nie
konstruktor bezparametrowy ustawiający wartość pola color na unknown i
isFilled na false
konstruktor przyjmujący parametry color i isFilled
metody typu getter odpowiedzialne za zwracanie wartości pól klasy
metody typu setter odpowiedzialne za ustawianie wartości pól klasy
nadpisaną metodę toString odpowiedzialną za wyświetlanie następującej
informacji: Shape with color of ? and filled/NotFilled , gdzie ?
oznacza wartość kolor, a wartość filled / not filled powinna zostać
zwracana w zależności od pola isFilled

Klasa Circle:
Zaimplementuj klasę Circle , która będzie rozszerzać klasę Shape o
następujące cechy:
pole odpowiedzialne za przechowywanie wartości promienia
konstruktor bezparametrowy ustawiający wartość pola color na unknown i
isFilled na false oraz pola radius na 1
konstruktor przyjmujący parametry color , isFilled , radius
metodę typu getter odpowiedzialną za zwracanie wartości pola radius
metodę typu setter odpowiedzialną za ustawianie wartości pola radius
metodę getArea odpowiedzialną za obliczanie pola powierzchni
metodę getPerimeter odpowiedzialną za obliczanie obwodu
nadpisaną metodę toString odpowiedzialną za wyświetlanie następującej
informacji: Circle with radius=? which is a subclass off y , gdzie ?
oznacza wartość promienia, a wartość y powinna być rezultatem
wywołania metody toString z klasu bazowej

Klasa Rectangle:
Zaimplementuj klasę Rectangle , która będzie rozszerzać klasę Shape o
następujące cechy:
pole szerokość oraz długość będące typem double
konstruktor bezparametrowy ustawiający wartość pola color na unknown i
isFilled na false oraz pola width i length na 1
konstruktor przyjmujący parametry color , isFilled , width i length
metody typu getter do zwracania wartości pól width , length
metody typu setter do ustawiania wartości pól width i length
metodę getArea odpowiedzialną za obliczanie pola powierzchni
metodę getPerimeter odpowiedzialną za obliczanie obwodu
nadpisaną metodę toString odpowiedzialną za wyświetlanie następującej
informacji: Rectangle with width=? and length=? which is a subclass
off y , gdzie ? oznacza wartość odpowiednio szerokości i długości, a
wartość y powinna być rezultatem wywołania metody toString z klasy
bazowej

Klasa Square:
Zaimplementuj klasę Square , która będzie rozszerzać klasę Rectangle . Klasa
ta nie powinna wprowadzać nowych pól oraz funkcjonalności, ale powinna
wymuszać na klasie bazowej zachowanie kwadratu.
Zaprezentuj zaimplementowane powyżej rozwiązanie na przykładzie.
